name: Build binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  prepare:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.set-version.outputs.publish_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version from tag
        run: |
          PUBLISH_VERSION="${GITHUB_REF_NAME:1}"
          echo "publish_version=$PUBLISH_VERSION" >> $GITHUB_ENV

      - name: Set version to outputs
        id: set-version
        run: |
          echo "::set-output name=publish_version::${{ env.publish_version }}"
          echo "version: ${{ env.publish_version }}"

  macos:
    name: Build macos artifacts
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'adopt'
          cache: gradle

      - name: Build artifacts
        run: ./gradlew --no-daemon -PpublishVersion=${{ needs.prepare.outputs.publish-version }} build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: build

  release:
    name: Release artifacts
    needs: [ prepare, macos ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts from build
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Create Release
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release ${{ github.ref }}

      - name: Publish artifact
        env:
          signing_keyId: ${{ secrets.SIGNING_KEYID }}
          signing_key: ${{ secrets.SIGNING_KEY }}
          signing_password: ${{ secrets.SIGNING_PASSWORD }}
          ossrhUsername: ${{ secrets.OSSRHUSERNAME }}
          ossrhPassword: ${{ secrets.OSSRHPASSWORD }}
        run: ./gradlew --no-daemon -PpublishVersion=${{ needs.prepare.outputs.publish-version }} publishAllPublicationsToSonatypeRepository